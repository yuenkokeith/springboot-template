spring.application.name=ACCOUNT-SERVICE
server.port=8080
spring.cloud.config.enabled=false

# Memory Database for local development
#spring.jpa.show-sql=true
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.h2.console.enabled=true

# PostgresSQL Connection - Local
spring.datasource.url=jdbc:postgresql://localhost:5432/microservices_db
spring.datasource.username=postgres
spring.datasource.password=dummpypassword

# PostgresSQL Connection - AWS RDS
#spring.datasource.url=jdbc:postgresql://salesforce-master.crjyln1pbpth.ap-east-1.rds.amazonaws.com:5432/microservices_db
#spring.datasource.username=salesforce_admin
#spring.datasource.password=dummpypassword

# PostgresSQL Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Sync Update Tables
spring.jpa.hibernate.ddl-auto=update

# Wait for datasource ready
spring.jpa.defer-datasource-initialization=true

# Eureka Service Discovery - Local
#eureka.client.serviceUrl.defaultZone=http://eureka-np:8761/eureka

# Eureka Service Discovery - AWS RDS
eureka.region=ap-east-1
eureka.client.region=ap-east-1
eureka.instance.metadataMap.zone = ap-east-1
eureka.client.preferSameZoneEureka = true
eureka.client.serviceUrl.defaultZone=http://eureka-np:8761/eureka

# Redis Config
spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379

springdoc.swagger-ui.path=/api/v1/account/swagger-ui.html
springdoc.api-docs.path=/api/v1/account/v3/api-docs

#JWT Properties
app.jwt-secret=a4e463d7dec930ea7f5a7d92fc3b798a167c7c206438739d4c82d96d5ebf2cfe
app-jwt-expiration-milliseconds=604800000


# Resilience4j settings
resilience4j.retry.instances.sample-api.maxAttempts=5
resilience4j.retry.instances.sample-api.waitDuration=1s
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true
resilience4j.ratelimiter.instances.default.limitForPeriod=2
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=10s

## CHANGE-KUBERNETES
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

## Kafka Settings
spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.bootstrap-servers: localhost:9092
#spring.kafka.consumer.group-id: email
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

gt.send-member-topics=crm.member
gt.reply-member-topics=crm.member-reply
gt.send-member-favmall-topics=crm.member.fav-mall
gt.reply-member-favmall-topics=crm.member.fav-mall-reply
gt.send-member-linked-partner-topics=crm.member.linked-partner
gt.reply-member-linked-partner-topics=crm.member.linked-partner-reply
gt.send-member-point-topics=crm.member.point
gt.reply-member-point-topics=crm.member.point-reply
gt.send-earn-point-receipt=crm.earn-point.receipt
gt.reply-earn-point-receipt=crm.earn-point.receipt-reply

gt.consumer-group=member-kafka-group
gt.order-topics=order_topics


